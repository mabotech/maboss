// Generated by CoffeeScript 1.7.1

/*
 * Copyright (C) 2014 Andrey Antukh <niwi@niwi.be>
 * Copyright (C) 2014 Jesús Espino Garcia <jespinog@gmail.com>
 * Copyright (C) 2014 David Barragán Merino <bameda@dbarragan.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 * File: modules/nav.coffee
 */

(function() {
  var ProjectMenuDirective, ProjectsNavigationController, ProjectsNavigationDirective, bindOnce, groupBy, module, taiga, timeout,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  taiga = this.taiga;

  groupBy = this.taiga.groupBy;

  bindOnce = this.taiga.bindOnce;

  timeout = this.taiga.timeout;

  module = angular.module("taigaNavMenu", []);

  ProjectsNavigationController = (function(_super) {
    __extends(ProjectsNavigationController, _super);

    ProjectsNavigationController.$inject = ["$scope", "$rootScope", "$tgResources", "$tgNavUrls", "$projectUrl"];

    function ProjectsNavigationController(scope, rootscope, rs, navurls, projectUrl) {
      var promise;
      this.scope = scope;
      this.rootscope = rootscope;
      this.rs = rs;
      this.navurls = navurls;
      this.projectUrl = projectUrl;
      promise = this.loadInitialData();
      promise.then(null, function() {
        return console.log("FAIL");
      });
      this.scope.$on("projects:reload", (function(_this) {
        return function() {
          return _this.loadInitialData();
        };
      })(this));
      this.scope.$on("project:loaded", (function(_this) {
        return function(ctx, project) {
          return _this.loadInitialData();
        };
      })(this));
    }

    ProjectsNavigationController.prototype.loadInitialData = function() {
      return this.rs.projects.list().then((function(_this) {
        return function(projects) {
          var project, _i, _len;
          for (_i = 0, _len = projects.length; _i < _len; _i++) {
            project = projects[_i];
            project.url = _this.projectUrl.get(project);
          }
          _this.scope.projects = projects;
          _this.scope.filteredProjects = projects;
          _this.scope.filterText = "";
          return projects;
        };
      })(this));
    };

    ProjectsNavigationController.prototype.newProject = function() {
      return this.scope.$apply((function(_this) {
        return function() {
          return _this.rootscope.$broadcast("projects:create");
        };
      })(this));
    };

    ProjectsNavigationController.prototype.filterProjects = function(text) {
      this.scope.filteredProjects = _.filter(this.scope.projects, function(project) {
        return project.name.toLowerCase().indexOf(text) > -1;
      });
      this.scope.filterText = text;
      return this.rootscope.$broadcast("projects:filtered");
    };

    return ProjectsNavigationController;

  })(taiga.Controller);

  module.controller("ProjectsNavigationController", ProjectsNavigationController);

  ProjectsNavigationDirective = function($rootscope, animationFrame, $timeout, tgLoader, $location, $compile) {
    var baseTemplate, hideMenu, link, loadingStart, overlay, projectsTemplate;
    baseTemplate = _.template("<h1>Your projects</h1>\n<form>\n    <fieldset>\n        <input type=\"text\" placeholder=\"Search in...\" class=\"search-project\"/>\n        <a class=\"icon icon-search\"></a>\n    </fieldset>\n</form>\n\n<div class=\"create-project-button\">\n    <a class=\"button button-green\" href=\"\">\n        Create project\n    </a>\n</div>\n\n<div class=\"projects-pagination\" tg-projects-pagination>\n    <a class=\"v-pagination-previous icon icon-arrow-up \" href=\"\"></a>\n    <div class=\"v-pagination-list\">\n        <ul class=\"projects-list\">\n        </ul>\n    </div>\n    <a class=\"v-pagination-next icon icon-arrow-bottom\" href=\"\"></a>\n</div>");
    projectsTemplate = _.template("<% _.each(projects, function(project) { %>\n<li>\n    <a href=\"<%- project.url %>\">\n        <span class=\"project-name\"><%- project.name %></span>\n        <span class=\"icon icon-arrow-right\"/>\n    </a>\n</li>\n<% }) %>");
    overlay = $(".projects-nav-overlay");
    loadingStart = 0;
    hideMenu = function() {
      var difftime, timeoutValue;
      if (overlay.is(':visible')) {
        difftime = new Date().getTime() - loadingStart;
        timeoutValue = 0;
        if (difftime < 1000) {
          timeoutValue = 1000 - timeoutValue;
        }
        return timeout(timeoutValue, function() {
          overlay.one('transitionend', function() {
            $(document.body).removeClass("loading-project open-projects-nav closed-projects-nav").css("overflow-x", "visible");
            return overlay.hide();
          });
          $(document.body).addClass("closed-projects-nav");
          return tgLoader.disablePreventLoading();
        });
      }
    };
    link = function($scope, $el, $attrs, $ctrls) {
      var $ctrl, render, renderProjects;
      $ctrl = $ctrls[0];
      $rootscope.$on("project:loaded", hideMenu);
      renderProjects = function(projects) {
        var html;
        html = projectsTemplate({
          projects: projects
        });
        $el.find(".projects-list").html(html);
        return $scope.$emit("regenerate:project-pagination");
      };
      render = function(projects) {
        $el.html($compile(baseTemplate())($scope));
        return renderProjects(projects);
      };
      overlay.on('click', function() {
        return hideMenu();
      });
      $(document).on('keydown', (function(_this) {
        return function(e) {
          var code;
          code = e.keyCode ? e.keyCode : e.which;
          if (code === 27) {
            return hideMenu();
          }
        };
      })(this));
      $scope.$on("nav:projects-list:open", function() {
        if (!$(document.body).hasClass("open-projects-nav")) {
          animationFrame.add((function(_this) {
            return function() {
              return overlay.show();
            };
          })(this));
        }
        return animationFrame.add((function(_this) {
          return function() {
            return $(document.body).css("overflow-x", "hidden");
          };
        })(this), (function(_this) {
          return function() {
            return $(document.body).toggleClass("open-projects-nav");
          };
        })(this));
      });
      $el.on("click", ".projects-list > li > a", function(event) {
        var currentUrl, nextUrl, target;
        target = angular.element(event.currentTarget);
        nextUrl = target.prop("href");
        currentUrl = $location.absUrl();
        if (nextUrl === currentUrl) {
          hideMenu();
          return;
        }
        $(document.body).addClass('loading-project');
        tgLoader.preventLoading();
        return loadingStart = new Date().getTime();
      });
      $el.on("click", ".create-project-button .button", function(event) {
        event.preventDefault();
        return $ctrl.newProject();
      });
      $el.on("keyup", ".search-project", function(event) {
        var target;
        target = angular.element(event.currentTarget);
        return $ctrl.filterProjects(target.val());
      });
      $scope.$on("projects:filtered", function() {
        return renderProjects($scope.filteredProjects);
      });
      return $scope.$watch("projects", function(projects) {
        if (projects != null) {
          return render(projects);
        }
      });
    };
    return {
      require: ["tgProjectsNav"],
      controller: ProjectsNavigationController,
      link: link
    };
  };

  module.directive("tgProjectsNav", ["$rootScope", "animationFrame", "$timeout", "tgLoader", "$tgLocation", "$compile", ProjectsNavigationDirective]);

  ProjectMenuDirective = function($log, $compile, $auth, $rootscope, $tgAuth, $location, $navUrls, $config) {
    var getSectionName, link, mainTemplate, menuEntriesTemplate, renderMainMenu, renderMenuEntries, videoConferenceUrl;
    menuEntriesTemplate = _.template("<div class=\"menu-container\">\n    <ul class=\"main-nav\">\n    <li id=\"nav-search\">\n        <a href=\"\" title=\"Search\">\n            <span class=\"icon icon-search\"></span><span class=\"item\">Search</span>\n        </a>\n    </li>\n    <% if (project.is_backlog_activated && project.my_permissions.indexOf(\"view_us\") != -1) { %>\n    <li id=\"nav-backlog\">\n        <a href=\"\" title=\"Backlog\" tg-nav=\"project-backlog:project=project.slug\">\n            <span class=\"icon icon-backlog\"></span>\n            <span class=\"item\">Backlog</span>\n        </a>\n    </li>\n    <% } %>\n    <% if (project.is_kanban_activated && project.my_permissions.indexOf(\"view_us\") != -1) { %>\n    <li id=\"nav-kanban\">\n        <a href=\"\" title=\"Kanban\" tg-nav=\"project-kanban:project=project.slug\">\n            <span class=\"icon icon-kanban\"></span><span class=\"item\">Kanban</span>\n        </a>\n    </li>\n    <% } %>\n    <% if (project.is_issues_activated && project.my_permissions.indexOf(\"view_issues\") != -1) { %>\n    <li id=\"nav-issues\">\n        <a href=\"\" title=\"Issues\" tg-nav=\"project-issues:project=project.slug\">\n            <span class=\"icon icon-issues\"></span><span class=\"item\">Issues</span>\n        </a>\n    </li>\n    <% } %>\n    <% if (project.is_wiki_activated && project.my_permissions.indexOf(\"view_wiki_pages\") != -1) { %>\n    <li id=\"nav-wiki\">\n        <a href=\"\" title=\"Wiki\" tg-nav=\"project-wiki:project=project.slug\">\n            <span class=\"icon icon-wiki\"></span>\n            <span class=\"item\">Wiki</span>\n        </a>\n    </li>\n    <% } %>\n    <li id=\"nav-team\">\n        <a href=\"\" title=\"Team\" tg-nav=\"project-team:project=project.slug\">\n            <span class=\"icon icon-team\"></span>\n            <span class=\"item\">Team</span>\n        </a>\n    </li>\n    <% if (project.videoconferences) { %>\n    <li id=\"nav-video\">\n        <a href=\"<%- project.videoconferenceUrl %>\" target=\"_blank\" title=\"Meet Up\">\n            <span class=\"icon icon-video\"></span>\n            <span class=\"item\">Meet Up</span>\n        </a>\n    </li>\n    <% } %>\n    <% if (project.i_am_owner) { %>\n    <li id=\"nav-admin\">\n        <a href=\"\" tg-nav=\"project-admin-home:project=project.slug\" title=\"Admin\">\n            <span class=\"icon icon-settings\"></span>\n            <span class=\"item\">Admin</span>\n        </a>\n    </li>\n    <% } %>\n    </ul>\n    <div class=\"user\">\n        <div class=\"user-settings\">\n            <ul class=\"popover\">\n                <li><a href=\"\" title=\"User Profile\", tg-nav=\"user-settings-user-profile:project=project.slug\">User Profile</a></li>\n                <li><a href=\"\" title=\"Change Password\", tg-nav=\"user-settings-user-change-password:project=project.slug\">Change Password</a></li>\n                <li><a href=\"\" title=\"Notifications\", tg-nav=\"user-settings-mail-notifications:project=project.slug\">Notifications</a></li>\n                <% if (feedbackEnabled) { %>\n                <li><a href=\"\" class=\"feedback\" title=\"Feedback\"\">Feedback</a></li>\n                <% } %>\n                <li><a href=\"\" title=\"Logout\" class=\"logout\">Logout</a></li>\n            </ul>\n            <a href=\"\" title=\"User preferences\" class=\"avatar\" id=\"nav-user-settings\">\n                <img src=\"<%- user.photo %>\" alt=\"<%- user.full_name_display %>\" />\n            </a>\n        </div>\n    </div>\n</div>");
    mainTemplate = _.template("<div class=\"logo-container logo\">\n    <svg xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 134.2 134.3\" version=\"1.1\" preserveAspectRatio=\"xMidYMid meet\">\n        <style>\n            path {\n                fill:#f5f5f5;\n                opacity:0.7;\n            }\n        </style>\n        <g transform=\"translate(-307.87667,-465.22863)\">\n            <g class=\"bottom\">\n                <path transform=\"matrix(-0.14066483,0.99005727,-0.99005727,0.14066483,0,0)\" d=\"m561.8-506.6 42 0 0 42-42 0z\" />\n                <path transform=\"matrix(0.14066483,-0.99005727,0.99005727,-0.14066483,0,0)\" d=\"m-645.7 422.6 42 0 0 42-42 0z\" />\n                <path transform=\"matrix(0.99005727,0.14066483,0.14066483,0.99005727,0,0)\" d=\"m266.6 451.9 42 0 0 42-42 0z\" />\n                <path transform=\"matrix(-0.99005727,-0.14066483,-0.14066483,-0.99005727,0,0)\" d=\"m-350.6-535.9 42 0 0 42-42 0z\" />\n            </g>\n            <g class=\"top\">\n                <path transform=\"matrix(-0.60061118,-0.79954125,0.60061118,-0.79954125,0,0)\" d=\"m-687.1-62.7 42 0 0 42-42 0z\" />\n                <path transform=\"matrix(-0.79954125,0.60061118,-0.79954125,-0.60061118,0,0)\" d=\"m166.6-719.6 42 0 0 42-42 0z\" />\n                <path transform=\"matrix(0.60061118,0.79954125,-0.60061118,0.79954125,0,0)\" d=\"m603.1-21.3 42 0 0 42-42 0z\" />\n                <path transform=\"matrix(0.79954125,-0.60061118,0.79954125,0.60061118,0,0)\" d=\"m-250.7 635.8 42 0 0 42-42 0z\" />\n                <path transform=\"matrix(0.70710678,0.70710678,-0.70710678,0.70710678,0,0)\" d=\"m630.3 100 22.6 0 0 22.6-22.6 0z\" />\n            </g>\n        </g>\n    </svg>\n    <span class=\"item\">taiga<sup>[beta]</sup></span>\n</div>\n<div class=\"menu-container\"></div>");
    getSectionName = function($el, sectionName, project) {
      var oldSectionName, _ref;
      oldSectionName = (_ref = $el.find("a.active").parent().attr("id")) != null ? _ref.replace("nav-", "") : void 0;
      if (sectionName === "backlog-kanban") {
        if (oldSectionName === "backlog" || oldSectionName === "kanban") {
          sectionName = oldSectionName;
        } else if (project.is_backlog_activated && !project.is_kanban_activated) {
          sectionName = "backlog";
        } else if (!project.is_backlog_activated && project.is_kanban_activated) {
          sectionName = "kanban";
        }
      }
      return sectionName;
    };
    renderMainMenu = function($el) {
      var html;
      html = mainTemplate({});
      return $el.html(html);
    };
    renderMenuEntries = function($el, targetScope, project) {
      var container, ctx, dom, sectionName;
      if (project == null) {
        project = {};
      }
      container = $el.find(".menu-container");
      sectionName = getSectionName($el, targetScope.section, project);
      ctx = {
        user: $auth.getUser(),
        project: project,
        feedbackEnabled: $config.get("feedbackEnabled")
      };
      dom = $compile(menuEntriesTemplate(ctx))(targetScope);
      dom.find("a.active").removeClass("active");
      dom.find("#nav-" + sectionName + " > a").addClass("active");
      return container.replaceWith(dom);
    };
    videoConferenceUrl = function(project) {
      var baseUrl, url;
      if (project.videoconferences === "appear-in") {
        baseUrl = "https://appear.in/";
      } else if (project.videoconferences === "talky") {
        baseUrl = "https://talky.io/";
      } else {
        return "";
      }
      if (project.videoconferences_salt) {
        url = "" + project.slug + "-" + project.videoconferences_salt;
      } else {
        url = "" + project.slug;
      }
      return baseUrl + url;
    };
    link = function($scope, $el, $attrs, $ctrl) {
      var project;
      renderMainMenu($el);
      project = null;
      $el.on("click", ".logo", function(event) {
        var target;
        event.preventDefault();
        target = angular.element(event.currentTarget);
        return $rootscope.$broadcast("nav:projects-list:open");
      });
      $el.on("click", ".user-settings .avatar", function(event) {
        event.preventDefault();
        return $el.find(".user-settings .popover").popover().open();
      });
      $el.on("click", ".logout", function(event) {
        event.preventDefault();
        $auth.logout();
        return $scope.$apply(function() {
          return $location.path($navUrls.resolve("login"));
        });
      });
      $el.on("click", "#nav-search > a", function(event) {
        event.preventDefault();
        return $rootscope.$broadcast("search-box:show", project);
      });
      $el.on("click", ".feedback", function(event) {
        event.preventDefault();
        return $rootscope.$broadcast("feedback:show");
      });
      $scope.$on("projects:loaded", function(listener) {
        $el.addClass("hidden");
        return listener.stopPropagation();
      });
      return $scope.$on("project:loaded", function(ctx, newProject) {
        project = newProject;
        if ($el.hasClass("hidden")) {
          $el.removeClass("hidden");
        }
        project.videoconferenceUrl = videoConferenceUrl(project);
        return renderMenuEntries($el, ctx.targetScope, project);
      });
    };
    return {
      link: link
    };
  };

  module.directive("tgProjectMenu", ["$log", "$compile", "$tgAuth", "$rootScope", "$tgAuth", "$tgLocation", "$tgNavUrls", "$tgConfig", ProjectMenuDirective]);

}).call(this);
