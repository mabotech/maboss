// Generated by CoffeeScript 1.7.1
(function() {
  "use strict";

  /*
  FacilityListCtrl
  view of engity list
  save pagination and filter params in session?
   */
  var module;

  module = angular.module("maboss.FacilityListCtrl", []);

  module.controller("FacilityListCtrl", [
    "$scope", "$routeParams", "$http", "sessionService", "dataService", "common", function($scope, $routeParams, $http, sessionService, dataService, common) {
      var DEFAULT_DIR, DEFAULT_PAGE_SIZE, DEFAULT_SORT_ICON, SORT_ICON, context, init, init_table, list;
      $scope.table = "facility";
      $scope.cols = ["facility", "texths", "createdon", "createdby"];
      DEFAULT_SORT_ICON = "";
      DEFAULT_DIR = "asc";
      SORT_ICON = {
        asc: "chevron-up",
        desc: "chevron-down"
      };
      DEFAULT_PAGE_SIZE = 15;
      $scope.limitOptions = {};
      context = {
        user: "idea",
        languageid: "1033",
        session: "sess"
      };
      init = function() {
        var filter;
        $scope.session = sessionService.get("FACILITY");
        $scope.domain = null;
        if ($scope.session.user === undefined) {
          sessionService.put("FACILITY", context);
        } else {
          common.elog($scope.session);
        }
        if ($scope.session.limit) {
          $scope.limit = $scope.session.limit;
        } else {
          $scope.limit = DEFAULT_PAGE_SIZE;
        }
        init_table();
        filter = $routeParams.filter;
        if (filter) {
          $scope.domain = [[["company", "=", "MTP"]]];
        }
        list();
      };
      init_table = function() {
        var i;
        $scope.filter = "";
        $scope.currentPage = 1;
        $scope.sort_col_seq = 1;
        $scope.sort_dir = "";
        $scope.pagesize = [15, 20, 30, 50, 100];
        $scope.sort_icons = {};
        $scope.maxSize = 10;
        i = void 0;
        i = 1;
        while (i <= $scope.cols.length) {
          $scope.sort_icons[i] = DEFAULT_SORT_ICON;
          i++;
        }
      };
      $scope.change_limit = function() {
        common.elog("change_limit");
        context.limit = $scope.limit;
        sessionService.put("FACILITY", context);
        list();
      };
      $scope.filter_change = function(t) {
        if (t === 0) {
          if ($scope.filter === "") {
            common.elog("return");
            return;
          }
          $scope.filter = "";
          $scope.domain = null;
        } else {
          $scope.domain = [[["facility", "ilike", $scope.filter + "%"]], [["texths", "ilike", $scope.filter + "%"]]];
        }
        list();
      };
      $scope.page_changed = function(page) {
        common.elog("page_changed");
        $scope.currentPage = page;
        list();
      };
      $scope.get_icon = function(seq) {
        if ($scope.sort_icons[seq] !== "") {
          return ["fa fa", $scope.sort_icons[seq]].join("-");
        } else {
          return "fa";
        }
      };
      $scope.sort = function(col_seq) {
        if ($scope.sort_col_seq === col_seq) {
          if ($scope.sort_dir === "asc") {
            $scope.sort_dir = "desc";
          } else if ($scope.sort_dir === "desc") {
            $scope.sort_dir = "asc";
          } else {
            $scope.sort_dir = DEFAULT_DIR;
          }
        } else {
          $scope.sort_icons[$scope.sort_col_seq] = DEFAULT_SORT_ICON;
          $scope.sort_col_seq = col_seq;
          $scope.sort_dir = DEFAULT_DIR;
        }
        $scope.sort_icons[col_seq] = SORT_ICON[$scope.sort_dir];
        list();
      };
      list = function() {
        var params;
        params = {
          table: $scope.table,
          pkey: "facility",
          cols: $scope.cols,
          orderby: [$scope.sort_col_seq, $scope.sort_dir].join(" "),
          offset: $scope.limit * ($scope.currentPage - 1),
          domain: $scope.domain,
          limit: $scope.limit,
          languageid: "1033"
        };
        dataService.list(params).then((function(result) {
          $scope.facility_list = result.data;
          $scope.totalItems = result.total;
        }), function(result) {
          common.elog(result);
        });
      };
      return init();
    }
  ]);

}).call(this);
